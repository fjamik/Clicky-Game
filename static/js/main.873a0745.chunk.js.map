{"version":3,"sources":["components/Card/Card.js","components/Header/Header.js","components/Wrapper/Wrapper.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","key","id","onClick","handleClick","alt","name","src","image","Header","children","score","win","Wrapper","App","state","cards","handleFinishGame","_this","setState","forEach","card","count","alert","concat","find","i","j","sort","Math","random","_this2","this","components_Wrapper_Wrapper","components_Header_Header","map","components_Card_Card","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"6rCAYeA,SATF,SAAAC,GAAK,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,IAAKL,EAAMM,GAAIC,QAAS,kBAAMP,EAAMQ,YAAYR,EAAMM,MAC5EL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACfH,EAAAC,EAAAC,cAAA,OAAKM,IAAKT,EAAMU,KAAMC,IAAKX,EAAMY,YCQpBC,SAXA,SAAAb,GAAK,OAClBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASJ,EAAMc,UAE9Bb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,mBAA0CJ,EAAMe,MAAhD,uBAA2Ef,EAAMgB,IAAjF,QCHaC,SAFC,SAAAjB,GAAK,OACrBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,IAA4BJ,EAAMc,SAAlC,cC2DeI,6MAtDbC,MAAQ,CACNC,QACAL,MAAO,EACPC,IAAK,KAGPK,iBAAmB,WAWjB,OAVIC,EAAKH,MAAMJ,MAAQO,EAAKH,MAAMH,KAChCM,EAAKC,SAAS,CAACP,IAAKM,EAAKH,MAAMJ,OAAQ,cAIzCO,EAAKH,MAAMC,MAAMI,QAAQ,SAAAC,GACvBA,EAAKC,MAAQ,IAEfC,MAAK,yBAAAC,OAA2BN,EAAKH,MAAMJ,QAC3CO,EAAKC,SAAS,CAACR,MAAO,KACf,KAGTP,YAAc,SAAAF,GACZgB,EAAKH,MAAMC,MAAMS,KAAK,SAACC,EAAGC,GACxB,GAAID,EAAExB,KAAOA,EAAI,CACf,GAAsB,IAAnBc,EAAMW,GAAGL,MAMV,OALAN,EAAMW,GAAGL,MAAO,EAChBJ,EAAKC,SAAS,CAACR,MAAQO,EAAKH,MAAMJ,MAAQ,GAAI,cAG9CO,EAAKH,MAAMC,MAAMY,KAAK,kBAAMC,KAAKC,SAAW,MACrC,EAEPZ,EAAKD,+FAMH,IAAAc,EAAAC,KACR,OACEnC,EAAAC,EAAAC,cAACkC,EAAD,KACEpC,EAAAC,EAAAC,cAACmC,EAAD,CAAQvB,MAAOqB,KAAKjB,MAAMJ,MAAOC,IAAKoB,KAAKjB,MAAMH,KAAjD,iBACCoB,KAAKjB,MAAMC,MAAMmB,IAAI,SAAAd,GAAI,OACxBxB,EAAAC,EAAAC,cAACqC,EAAD,CACAhC,YAAa2B,EAAK3B,YAClBF,GAAImB,EAAKnB,GACTD,IAAKoB,EAAKnB,GACVM,MAASa,EAAKb,kBAhDN6B,mBCFlBC,IAASC,OAAO1C,EAAAC,EAAAC,cAACyC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.873a0745.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = props => (\r\n  <div className=\"card\" key={props.id} onClick={() => props.handleClick(props.id)}>\r\n  <div className=\"img-container\">\r\n  <img alt={props.name} src={props.image} />\r\n  </div>\r\n\r\n  </div>\r\n);\r\n\r\nexport default Card;","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = props => (\r\n  <div className=\"header\" >\r\n  \r\n  <div className=\"title\">{props.children}</div>\r\n \r\n  <div className=\"scores\" > Current Score: {props.score}  |  Highest Score: {props.win} </div>\r\n  \r\n\r\n  </div>\r\n)\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./Wrapper.css\";\r\n\r\nconst Wrapper = props => \r\n<div className=\"wrapper\" > {props.children} </div>\r\nexport default Wrapper;","import React, { Component } from 'react';\nimport Card from \"./components/Card\";\nimport Header from \"./components/Header\";\nimport Wrapper from \"./components/Wrapper\";\nimport cards from \"./cards.json\";\n\n\nclass App extends Component {\n\n  state = {\n    cards,\n    score: 0,\n    win: 0\n  };\n\n  handleFinishGame = () => {\n    if (this.state.score > this.state.win) {\n      this.setState({win: this.state.score}, function () {\n\n      });\n    }\n    this.state.cards.forEach(card => {\n      card.count = 0;\n    });\n    alert (`Game Over :( \\nscore: ${this.state.score}`);\n    this.setState({score: 0});\n    return true;\n  }\n\n  handleClick = id => {\n    this.state.cards.find((i, j) => {\n      if (i.id === id) {\n        if(cards[j].count === 0){\n          cards[j].count =+ 1;\n          this.setState({score : this.state.score + 1}, function(){\n\n          });\n          this.state.cards.sort(() => Math.random() - 0.5)\n          return true;\n        } else {\n          this.handleFinishGame();\n        }\n      }\n    });\n  }\n\n  render () {\n    return (\n      <Wrapper>\n        <Header score={this.state.score} win={this.state.win} > Clicky Game </Header>\n        {this.state.cards.map(card => (\n          <Card \n          handleClick={this.handleClick}\n          id={card.id}\n          key={card.id}\n          image = {card.image} />\n        ))}\n      </Wrapper>\n    );\n  }\n\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}